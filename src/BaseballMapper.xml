<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="baseball.dao.BaseballMapper">

<!-- 회원 정보 저장 --> 
<insert id="join" parameterType="users">
insert into users (
	userId
	, password
)
values (
	#{userId}
	, #{password}
)
</insert>

<!-- 아이디 중복 확인 -->
<select id="getId" parameterType="string" resultType="users">
select 
	*
from
	users
where
	userId = #{userId}
</select>

<!-- 로그인시 아이디 패스워드 확인 -->
<select id="getPassword" parameterType="map" resultType="users">
select
	*
from
	users
where
	userId = #{userId}
	and password = #{password}
</select>

<!-- 타자 캐릭터 생성 -->
<insert id="hitterCharacterCreate" parameterType="character">
insert into usercharacter (
	characterId
	, userId
	, characterName
	, className
	, hitterPower
	, hitterHit
	, hitterRunSpeed
	)
	values (
	characteridseq.nextval
	, #{userId}
	, #{characterName}
	, #{className}
	, round(dbms_random.value(0,50))
	, round(dbms_random.value(0,50))
	, round(dbms_random.value(0,50))
	)
</insert>

<!-- 투수 캐릭터 생성 -->
<insert id="pitcherCharacterCreate" parameterType="character">
insert into usercharacter (
	characterId
	, userId
	, characterName
	, className
	, pitcherBallSpeed
	, pitcherBallControl
	, pitcherMentality
	)
	values (
	characteridseq.nextval
	, #{userId}
	, #{characterName}
	, #{className}
	, round(dbms_random.value(0,50))
	, round(dbms_random.value(0,50))
	, round(dbms_random.value(0,50))
	)
</insert>

<!-- 타자 캐릭터 목록 불러오기 -->
<select id="hitterSelect" parameterType="string" resultType="character">
select 
	uct.*
	, (hitterPower + hitterHit + hitterRunSpeed) as allStat
from
	usercharacter uct
where
	userId = #{loginId}
	and className = '타자'
</select>

<!-- 투수 캐릭터 목록 불러오기 -->
<select id="pitcherSelect" parameterType="string" resultType="character">
select 
	uct.*
	, (pitcherBallSpeed + pitcherBallControl + pitcherMentality) as allStat
from
	usercharacter uct
where
	userId = #{loginId}
	and className = '투수'
</select>

<select id="gloveSelect" resultType="item">
select * from item
where itemClass = '글러브'
</select>

<select id="clothSelect" resultType="item">
select * from item
where itemClass = '옷'
</select>

<select id="helmetSelect" resultType="item">
select * from item
where itemClass = '헬멧'
</select>

<select id="batSelect" resultType="item">
select * from item
where itemClass = '방망이'
</select>

<select id="shoesSelect" resultType="item">
select * from item
where itemClass = '신발'
</select>

<select id="foodSelect" resultType="item">
select * from item
where itemClass = '소비형 아이템'
</select>

<select id="itemInfo" resultType="itemhaveinfo">
select 
	uc.charactername, i.itemname, ihi.quantity 
from 
	item i, itemhaveinfo ihi , usercharacter uc
where 
	i.itemid = ihi.itemid and uc.characterid=ihi.characterid 
</select>

<insert id="itemehaveInfo" parameterType="itemhaveinfo">
insert into itemhaveinfo (
	characterid,
	itemid,
	quantity
	)
	values(
	#{characterid},
	#{itemid},
	#{quantity}
	)
</insert>



<select id="itemequiphaveInfo" resultType="itemequiphaveInfo">
select 
   i.itemname, i.price, i.summary,ihi.quantity
from 
   item i, itemhaveinfo ihi, usercharacter uc
where 
   i.itemid=ihi.itemid and ihi.characterid=uc.characterid

</select>

<update id="purchaseBat" parameterType="character">
update usercharacter 
set gold = #{gold},hitterPower=#{hitterPower}
where characterId=#{characterId}
</update>

<update id="purchaseCloth" parameterType="character">
update usercharacter 
set gold = #{gold},pitcherMentality=#{pitcherMentality}
where characterId=#{characterId}
</update>

<update id="purchaseHelmet" parameterType="character">
update usercharacter 
set gold = #{gold},pitcherBallSpeed=#{pitcherBallSpeed}
where characterId=#{characterId}
</update>

<update id="purchaseShoes" parameterType="int">
update usercharacter 
set  gold = #{gold},hitterRunSpeed = #{hitterRunSpeed}
where characterId=#{characterId}
</update>

<update id="purchaseGlove" parameterType="int">
update usercharacter 
set  gold = #{gold},pitcherBallControl = #{pitcherBallControl}
where characterId=#{characterId}
</update>

<update id="addQuantity" parameterType="int">
update 
	itemhaveinfo 
set 	
	quantity=quantity + 1 
where 
	itemid = #{itemid} 
</update>

</mapper>

